{
  "api/AuthEndpoints.AuthEndpointsBuilder.html": {
    "href": "api/AuthEndpoints.AuthEndpointsBuilder.html",
    "title": "Class AuthEndpointsBuilder | AuthEndpoints",
    "keywords": "Class AuthEndpointsBuilder Helper functions for configuring AuthEndpoints services. Inheritance System.Object AuthEndpointsBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints Assembly : AuthEndpoints.dll Syntax public class AuthEndpointsBuilder Constructors | Improve this Doc View Source AuthEndpointsBuilder(Type, IServiceCollection) Creates a new instance of AuthEndpointsBuilder . Declaration public AuthEndpointsBuilder(Type userType, IServiceCollection services) Parameters Type Name Description Type userType The type to use for the users. Microsoft.Extensions.DependencyInjection.IServiceCollection services The Microsoft.Extensions.DependencyInjection.IServiceCollection to attach to. Properties | Improve this Doc View Source Services Gets the Microsoft.Extensions.DependencyInjection.IServiceCollection services are attached to. Declaration public IServiceCollection Services { get; } Property Value Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The Microsoft.Extensions.DependencyInjection.IServiceCollection services are attached to. | Improve this Doc View Source UserType Gets the type used for users. Declaration public Type UserType { get; } Property Value Type Description Type The type used for users. Methods | Improve this Doc View Source AddAccessClaimsProvider<TProvider>() Adds an IAccessClaimsProvider<TUser> . Declaration public virtual AuthEndpointsBuilder AddAccessClaimsProvider<TProvider>() where TProvider : class Returns Type Description AuthEndpointsBuilder The current AuthEndpointsBuilder instance. Type Parameters Name Description TProvider The type of the claims provider. | Improve this Doc View Source AddAuthenticator<TAuthenticator>() Adds an IAuthenticator<TUser> . Declaration public virtual AuthEndpointsBuilder AddAuthenticator<TAuthenticator>() where TAuthenticator : class Returns Type Description AuthEndpointsBuilder The current AuthEndpointsBuilder instance. Type Parameters Name Description TAuthenticator The type of the authenticator. | Improve this Doc View Source AddErrorDescriber<TDescriber>() Adds an Microsoft.AspNetCore.Identity.IdentityErrorDescriber . Declaration public virtual AuthEndpointsBuilder AddErrorDescriber<TDescriber>() where TDescriber : IdentityErrorDescriber Returns Type Description AuthEndpointsBuilder The current AuthEndpointsBuilder instance. Type Parameters Name Description TDescriber The type of the error describer. | Improve this Doc View Source AddJwtBearerAuthScheme(TokenValidationParameters) Adds a jwt bearer defaults authentication scheme. Declaration public virtual AuthEndpointsBuilder AddJwtBearerAuthScheme(TokenValidationParameters parameters) Parameters Type Name Description Microsoft.IdentityModel.Tokens.TokenValidationParameters parameters Token validation parameters for JwtBearerOptions Returns Type Description AuthEndpointsBuilder The current AuthEndpointsBuilder instance. | Improve this Doc View Source AddJwtFactory<TGenerator>() Adds an IJwtFactory . Declaration public virtual AuthEndpointsBuilder AddJwtFactory<TGenerator>() where TGenerator : IJwtFactory Returns Type Description AuthEndpointsBuilder The current AuthEndpointsBuilder instance. Type Parameters Name Description TGenerator The type of the jwt factory. | Improve this Doc View Source AddJwtValidator<TValidator>() Adds an IJwtValidator Declaration public virtual AuthEndpointsBuilder AddJwtValidator<TValidator>() where TValidator : IJwtValidator Returns Type Description AuthEndpointsBuilder The current AuthEndpointsBuilder instance. Type Parameters Name Description TValidator The type of the jwt validator | Improve this Doc View Source AddRefreshClaimsProvider<TProvider>() Adds an IRefreshClaimsProvider<TUser> . Declaration public virtual AuthEndpointsBuilder AddRefreshClaimsProvider<TProvider>() where TProvider : class Returns Type Description AuthEndpointsBuilder The current AuthEndpointsBuilder instance. Type Parameters Name Description TProvider The type of the claims provider. | Improve this Doc View Source AddScoped(Type, Type) Declaration protected AuthEndpointsBuilder AddScoped(Type serviceType, Type concreteType) Parameters Type Name Description Type serviceType Type concreteType Returns Type Description AuthEndpointsBuilder"
  },
  "api/AuthEndpoints.AuthEndpointsOptions.html": {
    "href": "api/AuthEndpoints.AuthEndpointsOptions.html",
    "title": "Class AuthEndpointsOptions | AuthEndpoints",
    "keywords": "Class AuthEndpointsOptions Represents all the options you can use to configure the AuthEndpoints system. Inheritance System.Object AuthEndpointsOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints Assembly : AuthEndpoints.dll Syntax public class AuthEndpointsOptions Fields | Improve this Doc View Source Key Declaration public const string Key = \"AuthEndpoints\" Field Value Type Description System.String Properties | Improve this Doc View Source AccessExpirationMinutes Declaration public int AccessExpirationMinutes { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source AccessSecret Declaration public string AccessSecret { get; set; } Property Value Type Description System.String | Improve this Doc View Source AccessValidationParameters Declaration public TokenValidationParameters AccessValidationParameters { get; set; } Property Value Type Description Microsoft.IdentityModel.Tokens.TokenValidationParameters | Improve this Doc View Source Audience Declaration public string Audience { get; set; } Property Value Type Description System.String | Improve this Doc View Source Issuer Declaration public string Issuer { get; set; } Property Value Type Description System.String | Improve this Doc View Source RefreshExpirationMinutes Declaration public int RefreshExpirationMinutes { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RefreshSecret Declaration public string RefreshSecret { get; set; } Property Value Type Description System.String | Improve this Doc View Source RefreshValidationParameters Declaration public TokenValidationParameters RefreshValidationParameters { get; set; } Property Value Type Description Microsoft.IdentityModel.Tokens.TokenValidationParameters"
  },
  "api/AuthEndpoints.Controllers.BaseEndpointsController-2.html": {
    "href": "api/AuthEndpoints.Controllers.BaseEndpointsController-2.html",
    "title": "Class BaseEndpointsController<TUserKey, TUser> | AuthEndpoints",
    "keywords": "Class BaseEndpointsController<TUserKey, TUser> Inherit this base class to define endpoints that contain base authentication actions such as registration, set password, etc. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase BaseEndpointsController<TUserKey, TUser> Inherited Members Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Controllers Assembly : AuthEndpoints.dll Syntax [Route(\"users/\")] [ApiController] public class BaseEndpointsController<TUserKey, TUser> : ControllerBase where TUserKey : IEquatable<TUserKey> where TUser : IdentityUser<TUserKey>, new() Type Parameters Name Description TUserKey TUser Constructors | Improve this Doc View Source BaseEndpointsController(UserManager<TUser>, IdentityErrorDescriber) Declaration public BaseEndpointsController(UserManager<TUser> userManager, IdentityErrorDescriber errorDescriber) Parameters Type Name Description Microsoft.AspNetCore.Identity.UserManager <TUser> userManager Microsoft.AspNetCore.Identity.IdentityErrorDescriber errorDescriber Fields | Improve this Doc View Source errorDescriber Declaration protected readonly IdentityErrorDescriber errorDescriber Field Value Type Description Microsoft.AspNetCore.Identity.IdentityErrorDescriber | Improve this Doc View Source userManager Declaration protected readonly UserManager<TUser> userManager Field Value Type Description Microsoft.AspNetCore.Identity.UserManager <TUser> Methods | Improve this Doc View Source GetMe() Use this endpoint to retrieve the authenticated user Declaration [Authorize(\"jwt\")] [HttpGet(\"me\")] public virtual async Task<IActionResult> GetMe() Returns Type Description Task < Microsoft.AspNetCore.Mvc.IActionResult > | Improve this Doc View Source Register(RegisterRequest) Use this endpoint to register a new user Declaration [HttpPost(\"\")] public virtual async Task<IActionResult> Register([FromBody] RegisterRequest request) Parameters Type Name Description RegisterRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.IActionResult > | Improve this Doc View Source SetPassword(SetPasswordRequest) Use this endpoint to change user password Declaration [Authorize(\"jwt\")] [HttpPost(\"set_password\")] public virtual async Task<IActionResult> SetPassword([FromBody] SetPasswordRequest request) Parameters Type Name Description SetPasswordRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.IActionResult > | Improve this Doc View Source SetUsername(SetUsernameRequest) Use this endpoint to change user's username Declaration [Authorize(\"jwt\")] [HttpPost(\"set_username\")] public virtual async Task<IActionResult> SetUsername([FromBody] SetUsernameRequest request) Parameters Type Name Description SetUsernameRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.IActionResult >"
  },
  "api/AuthEndpoints.Controllers.html": {
    "href": "api/AuthEndpoints.Controllers.html",
    "title": "Namespace AuthEndpoints.Controllers | AuthEndpoints",
    "keywords": "Namespace AuthEndpoints.Controllers Classes BaseEndpointsController<TUserKey, TUser> Inherit this base class to define endpoints that contain base authentication actions such as registration, set password, etc. JwtController<TUserKey, TUser> Inherit this base class to define endpoints that contain simple jwt auth actions such as create and refresh."
  },
  "api/AuthEndpoints.Controllers.JwtController-2.html": {
    "href": "api/AuthEndpoints.Controllers.JwtController-2.html",
    "title": "Class JwtController<TUserKey, TUser> | AuthEndpoints",
    "keywords": "Class JwtController<TUserKey, TUser> Inherit this base class to define endpoints that contain simple jwt auth actions such as create and refresh. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase JwtController<TUserKey, TUser> Inherited Members Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Controllers Assembly : AuthEndpoints.dll Syntax [Route(\"jwt/\")] [ApiController] public class JwtController<TUserKey, TUser> : ControllerBase where TUserKey : IEquatable<TUserKey> where TUser : IdentityUser<TUserKey> Type Parameters Name Description TUserKey TUser Constructors | Improve this Doc View Source JwtController(UserManager<TUser>, IAuthenticator<TUser>, IJwtValidator, IOptions<AuthEndpointsOptions>) Declaration public JwtController(UserManager<TUser> userManager, IAuthenticator<TUser> authenticator, IJwtValidator jwtValidator, IOptions<AuthEndpointsOptions> options) Parameters Type Name Description Microsoft.AspNetCore.Identity.UserManager <TUser> userManager IAuthenticator <TUser> authenticator IJwtValidator jwtValidator Microsoft.Extensions.Options.IOptions < AuthEndpointsOptions > options Fields | Improve this Doc View Source authenticator Declaration protected readonly IAuthenticator<TUser> authenticator Field Value Type Description IAuthenticator <TUser> | Improve this Doc View Source jwtValidator Declaration protected readonly IJwtValidator jwtValidator Field Value Type Description IJwtValidator | Improve this Doc View Source options Declaration protected readonly IOptions<AuthEndpointsOptions> options Field Value Type Description Microsoft.Extensions.Options.IOptions < AuthEndpointsOptions > | Improve this Doc View Source userManager Declaration protected readonly UserManager<TUser> userManager Field Value Type Description Microsoft.AspNetCore.Identity.UserManager <TUser> Methods | Improve this Doc View Source Create(LoginRequest) Use this endpoint to obtain jwt Declaration [HttpPost(\"create\")] public virtual async Task<IActionResult> Create([FromBody] LoginRequest request) Parameters Type Name Description LoginRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.IActionResult > Remarks Use this endpoint to obtain jwt | Improve this Doc View Source Refresh(RefreshRequest) Use this endpoint to refresh jwt Declaration [HttpPost(\"refresh\")] public virtual async Task<IActionResult> Refresh([FromBody] RefreshRequest request) Parameters Type Name Description RefreshRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.IActionResult > | Improve this Doc View Source Verify(VerifyRequest) Use this endpoint to verify jwt Declaration [HttpPost(\"verify\")] public virtual async Task<IActionResult> Verify([FromBody] VerifyRequest request) Parameters Type Name Description VerifyRequest request Returns Type Description Task < Microsoft.AspNetCore.Mvc.IActionResult >"
  },
  "api/AuthEndpoints.html": {
    "href": "api/AuthEndpoints.html",
    "title": "Namespace AuthEndpoints | AuthEndpoints",
    "keywords": "Namespace AuthEndpoints Classes AuthEndpointsBuilder Helper functions for configuring AuthEndpoints services. AuthEndpointsOptions Represents all the options you can use to configure the AuthEndpoints system. ServiceCollectionExtensions Provides extensions to easily bootstrap authendpoints"
  },
  "api/AuthEndpoints.Models.AuthenticatedUserResponse.html": {
    "href": "api/AuthEndpoints.Models.AuthenticatedUserResponse.html",
    "title": "Class AuthenticatedUserResponse | AuthEndpoints",
    "keywords": "Class AuthenticatedUserResponse the dto used to send an authenticated user response containing access token and refresh token Inheritance System.Object AuthenticatedUserResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Models Assembly : AuthEndpoints.dll Syntax public class AuthenticatedUserResponse Properties | Improve this Doc View Source AccessToken Declaration public string AccessToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source RefreshToken Declaration public string RefreshToken { get; set; } Property Value Type Description System.String"
  },
  "api/AuthEndpoints.Models.ErrorResponse.html": {
    "href": "api/AuthEndpoints.Models.ErrorResponse.html",
    "title": "Class ErrorResponse | AuthEndpoints",
    "keywords": "Class ErrorResponse The dto used to send an error response to the client Inheritance System.Object ErrorResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Models Assembly : AuthEndpoints.dll Syntax public class ErrorResponse Constructors | Improve this Doc View Source ErrorResponse(IEnumerable<String>) instantiate a new error response with the given list of error messages Declaration public ErrorResponse(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < System.String > errors | Improve this Doc View Source ErrorResponse(String) instantiate a new error response with the given error message Declaration public ErrorResponse(string errorMessage) Parameters Type Name Description System.String errorMessage Properties | Improve this Doc View Source Errors Declaration public IEnumerable<string> Errors { get; set; } Property Value Type Description IEnumerable < System.String >"
  },
  "api/AuthEndpoints.Models.html": {
    "href": "api/AuthEndpoints.Models.html",
    "title": "Namespace AuthEndpoints.Models | AuthEndpoints",
    "keywords": "Namespace AuthEndpoints.Models Classes AuthenticatedUserResponse the dto used to send an authenticated user response containing access token and refresh token ErrorResponse The dto used to send an error response to the client LoginRequest The dto used for login request RefreshRequest the dto used for refresh request RegisterRequest the dto used for registration request SetPasswordRequest the dto used for set password request SetUsernameRequest the dto used for set username request VerifyRequest the dto used for verify request"
  },
  "api/AuthEndpoints.Models.LoginRequest.html": {
    "href": "api/AuthEndpoints.Models.LoginRequest.html",
    "title": "Class LoginRequest | AuthEndpoints",
    "keywords": "Class LoginRequest The dto used for login request Inheritance System.Object LoginRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Models Assembly : AuthEndpoints.dll Syntax public class LoginRequest Constructors | Improve this Doc View Source LoginRequest(String, String) Declaration public LoginRequest(string username, string password) Parameters Type Name Description System.String username System.String password Properties | Improve this Doc View Source Password Declaration [Required] public string Password { get; set; } Property Value Type Description System.String | Improve this Doc View Source Username Declaration [Required] public string Username { get; set; } Property Value Type Description System.String"
  },
  "api/AuthEndpoints.Models.RefreshRequest.html": {
    "href": "api/AuthEndpoints.Models.RefreshRequest.html",
    "title": "Class RefreshRequest | AuthEndpoints",
    "keywords": "Class RefreshRequest the dto used for refresh request Inheritance System.Object RefreshRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Models Assembly : AuthEndpoints.dll Syntax public class RefreshRequest Constructors | Improve this Doc View Source RefreshRequest(String) Declaration public RefreshRequest(string refreshToken) Parameters Type Name Description System.String refreshToken Properties | Improve this Doc View Source RefreshToken Declaration [Required] public string RefreshToken { get; set; } Property Value Type Description System.String"
  },
  "api/AuthEndpoints.Models.RegisterRequest.html": {
    "href": "api/AuthEndpoints.Models.RegisterRequest.html",
    "title": "Class RegisterRequest | AuthEndpoints",
    "keywords": "Class RegisterRequest the dto used for registration request Inheritance System.Object RegisterRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Models Assembly : AuthEndpoints.dll Syntax public class RegisterRequest Constructors | Improve this Doc View Source RegisterRequest(String, String, String, String) Declaration public RegisterRequest(string email, string username, string password, string confirmPassword) Parameters Type Name Description System.String email System.String username System.String password System.String confirmPassword Properties | Improve this Doc View Source ConfirmPassword Declaration [Required] public string ConfirmPassword { get; set; } Property Value Type Description System.String | Improve this Doc View Source Email Declaration [Required] [EmailAddress] public string Email { get; set; } Property Value Type Description System.String | Improve this Doc View Source Password Declaration [Required] public string Password { get; set; } Property Value Type Description System.String | Improve this Doc View Source Username Declaration [Required] public string Username { get; set; } Property Value Type Description System.String"
  },
  "api/AuthEndpoints.Models.SetPasswordRequest.html": {
    "href": "api/AuthEndpoints.Models.SetPasswordRequest.html",
    "title": "Class SetPasswordRequest | AuthEndpoints",
    "keywords": "Class SetPasswordRequest the dto used for set password request Inheritance System.Object SetPasswordRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Models Assembly : AuthEndpoints.dll Syntax public class SetPasswordRequest Properties | Improve this Doc View Source ConfirmNewPassword Declaration [Required] public string ConfirmNewPassword { get; set; } Property Value Type Description System.String | Improve this Doc View Source CurrentPassword Declaration [Required] public string CurrentPassword { get; set; } Property Value Type Description System.String | Improve this Doc View Source NewPassword Declaration [Required] public string NewPassword { get; set; } Property Value Type Description System.String"
  },
  "api/AuthEndpoints.Models.SetUsernameRequest.html": {
    "href": "api/AuthEndpoints.Models.SetUsernameRequest.html",
    "title": "Class SetUsernameRequest | AuthEndpoints",
    "keywords": "Class SetUsernameRequest the dto used for set username request Inheritance System.Object SetUsernameRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Models Assembly : AuthEndpoints.dll Syntax public class SetUsernameRequest Properties | Improve this Doc View Source CurrentPassword Declaration public string CurrentPassword { get; set; } Property Value Type Description System.String | Improve this Doc View Source NewUsername Declaration public string NewUsername { get; set; } Property Value Type Description System.String"
  },
  "api/AuthEndpoints.Models.VerifyRequest.html": {
    "href": "api/AuthEndpoints.Models.VerifyRequest.html",
    "title": "Class VerifyRequest | AuthEndpoints",
    "keywords": "Class VerifyRequest the dto used for verify request Inheritance System.Object VerifyRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Models Assembly : AuthEndpoints.dll Syntax public class VerifyRequest Properties | Improve this Doc View Source Token Declaration public string Token { get; set; } Property Value Type Description System.String"
  },
  "api/AuthEndpoints.ServiceCollectionExtensions.html": {
    "href": "api/AuthEndpoints.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions | AuthEndpoints",
    "keywords": "Class ServiceCollectionExtensions Provides extensions to easily bootstrap authendpoints Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints Assembly : AuthEndpoints.dll Syntax public static class ServiceCollectionExtensions Methods | Improve this Doc View Source AddAuthEndpoints<TUserKey, TUser>(IServiceCollection) Adds the AuthEndpoints core services Declaration public static AuthEndpointsBuilder AddAuthEndpoints<TUserKey, TUser>(this IServiceCollection services) where TUserKey : IEquatable<TUserKey> where TUser : IdentityUser<TUserKey> Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Returns Type Description AuthEndpointsBuilder A AuthEndpointsBuilder for creating and configuring the AuthEndpoints system. Type Parameters Name Description TUserKey TUser | Improve this Doc View Source AddAuthEndpoints<TUserKey, TUser>(IServiceCollection, Action<AuthEndpointsOptions>) Adds and configures the AuthEndpoints system. Declaration public static AuthEndpointsBuilder AddAuthEndpoints<TUserKey, TUser>(this IServiceCollection services, Action<AuthEndpointsOptions> setup) where TUserKey : IEquatable<TUserKey> where TUser : IdentityUser<TUserKey> Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The services available in the application. Action < AuthEndpointsOptions > setup An action to configure the AuthEndpointsOptions . Returns Type Description AuthEndpointsBuilder A AuthEndpointsBuilder for creating and configuring the AuthEndpoints system. Type Parameters Name Description TUserKey The type representing a User's primary key in the system. TUser The type representing a User in the system. | Improve this Doc View Source AddAuthEndpoints<TUserKey, TUser>(IServiceCollection, AuthEndpointsOptions) Adds and configures the AuthEndpoints system. Declaration public static AuthEndpointsBuilder AddAuthEndpoints<TUserKey, TUser>(this IServiceCollection services, AuthEndpointsOptions customOptions) where TUserKey : IEquatable<TUserKey> where TUser : IdentityUser<TUserKey> Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services AuthEndpointsOptions customOptions Returns Type Description AuthEndpointsBuilder A AuthEndpointsBuilder for creating and configuring the AuthEndpoints system. Type Parameters Name Description TUserKey TUser"
  },
  "api/AuthEndpoints.Services.AccessClaimsProvider-2.html": {
    "href": "api/AuthEndpoints.Services.AccessClaimsProvider-2.html",
    "title": "Class AccessClaimsProvider<TUserKey, TUser> | AuthEndpoints",
    "keywords": "Class AccessClaimsProvider<TUserKey, TUser> A default service that provide claims for access token Inheritance System.Object AccessClaimsProvider<TUserKey, TUser> Implements IAccessClaimsProvider <TUser> IClaimsProvider <TUser> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public class AccessClaimsProvider<TUserKey, TUser> : IAccessClaimsProvider<TUser>, IClaimsProvider<TUser> where TUserKey : IEquatable<TUserKey> where TUser : IdentityUser<TUserKey> Type Parameters Name Description TUserKey TUser Methods | Improve this Doc View Source provideClaims(TUser) Use this method to get list of claims for an access token Declaration public IList<Claim> provideClaims(TUser user) Parameters Type Name Description TUser user Returns Type Description IList < System.Security.Claims.Claim > A list of claims Implements IAccessClaimsProvider<TUser> IClaimsProvider<TUser>"
  },
  "api/AuthEndpoints.Services.DefaultAuthenticator-1.html": {
    "href": "api/AuthEndpoints.Services.DefaultAuthenticator-1.html",
    "title": "Class DefaultAuthenticator<TUser> | AuthEndpoints",
    "keywords": "Class DefaultAuthenticator<TUser> Default authenticator. Inheritance System.Object DefaultAuthenticator<TUser> Implements IAuthenticator <TUser> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public class DefaultAuthenticator<TUser> : IAuthenticator<TUser> where TUser : class Type Parameters Name Description TUser Constructors | Improve this Doc View Source DefaultAuthenticator(UserManager<TUser>, IJwtFactory, IAccessClaimsProvider<TUser>, IRefreshClaimsProvider<TUser>, IOptions<AuthEndpointsOptions>) Declaration public DefaultAuthenticator(UserManager<TUser> userManager, IJwtFactory jwtFactory, IAccessClaimsProvider<TUser> accessClaimsProvider, IRefreshClaimsProvider<TUser> refreshClaimsProvider, IOptions<AuthEndpointsOptions> options) Parameters Type Name Description Microsoft.AspNetCore.Identity.UserManager <TUser> userManager IJwtFactory jwtFactory IAccessClaimsProvider <TUser> accessClaimsProvider IRefreshClaimsProvider <TUser> refreshClaimsProvider Microsoft.Extensions.Options.IOptions < AuthEndpointsOptions > options Methods | Improve this Doc View Source Authenticate(String, String) Use this method to verify a set of credentials. It takes credentials as argument, username and password for the default case. Declaration public async Task<TUser> Authenticate(string username, string password) Parameters Type Name Description System.String username System.String password Returns Type Description Task <TUser> An instance of TUser if credentials are valid | Improve this Doc View Source Login(TUser) Use this method to get an access token and a refresh token for the given TUser Declaration public Task<AuthenticatedUserResponse> Login(TUser user) Parameters Type Name Description TUser user Returns Type Description Task < AuthenticatedUserResponse > An instance of AuthenticatedUserResponse , containing an access token and a refresh token Implements IAuthenticator<TUser>"
  },
  "api/AuthEndpoints.Services.DefaultJwtFactory.html": {
    "href": "api/AuthEndpoints.Services.DefaultJwtFactory.html",
    "title": "Class DefaultJwtFactory | AuthEndpoints",
    "keywords": "Class DefaultJwtFactory Use DefaultJwtFactory to create a jwt with HS256 based signature Inheritance System.Object DefaultJwtFactory Implements IJwtFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public class DefaultJwtFactory : IJwtFactory Constructors | Improve this Doc View Source DefaultJwtFactory(JwtSecurityTokenHandler) Declaration public DefaultJwtFactory(JwtSecurityTokenHandler tokenHandler) Parameters Type Name Description System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler tokenHandler Methods | Improve this Doc View Source Create(String, JwtPayload) Use this method to create a HS256-based jwt Declaration public string Create(string secret, JwtPayload payload) Parameters Type Name Description System.String secret System.IdentityModel.Tokens.Jwt.JwtPayload payload Returns Type Description System.String | Improve this Doc View Source Create(String, String, String, Nullable<IList<Claim>>, Int32) Use this method to create a HS256-based jwt Declaration public string Create(string secret, string issuer, string audience, IList<Claim>? claims, int expirationMinutes) Parameters Type Name Description System.String secret System.String issuer System.String audience System.Nullable < IList < System.Security.Claims.Claim >> claims System.Int32 expirationMinutes Returns Type Description System.String a jwt in string Implements IJwtFactory"
  },
  "api/AuthEndpoints.Services.DefaultJwtValidator.html": {
    "href": "api/AuthEndpoints.Services.DefaultJwtValidator.html",
    "title": "Class DefaultJwtValidator | AuthEndpoints",
    "keywords": "Class DefaultJwtValidator Use DefaultJwtValidator to validate a jwt Inheritance System.Object DefaultJwtValidator Implements IJwtValidator Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public class DefaultJwtValidator : IJwtValidator Constructors | Improve this Doc View Source DefaultJwtValidator(JwtSecurityTokenHandler) Declaration public DefaultJwtValidator(JwtSecurityTokenHandler tokenHandler) Parameters Type Name Description System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler tokenHandler Methods | Improve this Doc View Source ReadJwtToken(String) Read jwt from the given string Declaration public JwtSecurityToken ReadJwtToken(string token) Parameters Type Name Description System.String token Returns Type Description System.IdentityModel.Tokens.Jwt.JwtSecurityToken An instance of JwtSecurityToken | Improve this Doc View Source Validate(String, TokenValidationParameters) Use this method to validate a jwt Declaration public bool Validate(string token, TokenValidationParameters validationParameters) Parameters Type Name Description System.String token Microsoft.IdentityModel.Tokens.TokenValidationParameters validationParameters Returns Type Description System.Boolean a boolean, return true if valid | Improve this Doc View Source ValidateAsync(String, TokenValidationParameters) Declaration public async Task<bool> ValidateAsync(string token, TokenValidationParameters validationParameters) Parameters Type Name Description System.String token Microsoft.IdentityModel.Tokens.TokenValidationParameters validationParameters Returns Type Description Task < System.Boolean > Implements IJwtValidator"
  },
  "api/AuthEndpoints.Services.html": {
    "href": "api/AuthEndpoints.Services.html",
    "title": "Namespace AuthEndpoints.Services | AuthEndpoints",
    "keywords": "Namespace AuthEndpoints.Services Classes AccessClaimsProvider<TUserKey, TUser> A default service that provide claims for access token DefaultAuthenticator<TUser> Default authenticator. DefaultJwtFactory Use DefaultJwtFactory to create a jwt with HS256 based signature DefaultJwtValidator Use DefaultJwtValidator to validate a jwt RefreshClaimsProvider<TUserKey, TUser> A default service that provides claims for Refresh Token RsaSignedJwtFactory Use RsaSignedJwtFactory to create a jwt with RS256 signature. Interfaces IAccessClaimsProvider<TUser> Implements IAccessClaimsProvider<TUser> to define your refresh token claims provider IAuthenticator<TUser> Implements IAuthenticator<TUser> to define your authenticator IClaimsProvider<TUser> Implements IClaimsProvider<TUser> to define your claims provider IJwtFactory Implements IJwtFactory to define your jwt generator IJwtValidator Implements IJwtValidator to define your jwt validator IRefreshClaimsProvider<TUser> Implements IRefreshClaimsProvider<TUser> to define your refresh token claims provider"
  },
  "api/AuthEndpoints.Services.IAccessClaimsProvider-1.html": {
    "href": "api/AuthEndpoints.Services.IAccessClaimsProvider-1.html",
    "title": "Interface IAccessClaimsProvider<TUser> | AuthEndpoints",
    "keywords": "Interface IAccessClaimsProvider<TUser> Implements IAccessClaimsProvider<TUser> to define your refresh token claims provider Inherited Members IClaimsProvider<TUser>.provideClaims(TUser) Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public interface IAccessClaimsProvider<TUser> : IClaimsProvider<TUser> where TUser : class Type Parameters Name Description TUser"
  },
  "api/AuthEndpoints.Services.IAuthenticator-1.html": {
    "href": "api/AuthEndpoints.Services.IAuthenticator-1.html",
    "title": "Interface IAuthenticator<TUser> | AuthEndpoints",
    "keywords": "Interface IAuthenticator<TUser> Implements IAuthenticator<TUser> to define your authenticator Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public interface IAuthenticator<TUser> where TUser : class Type Parameters Name Description TUser Methods | Improve this Doc View Source Authenticate(String, String) Implements this method to verify a set of credentials, username and password for the default case Declaration Task<TUser> Authenticate(string username, string password) Parameters Type Name Description System.String username System.String password Returns Type Description Task <TUser> An instance of TUser if credentials are valid, else return null | Improve this Doc View Source Login(TUser) Implements this method to log a user in Declaration Task<AuthenticatedUserResponse> Login(TUser user) Parameters Type Name Description TUser user Returns Type Description Task < AuthenticatedUserResponse > An instance of AuthenticatedUserResponse"
  },
  "api/AuthEndpoints.Services.IClaimsProvider-1.html": {
    "href": "api/AuthEndpoints.Services.IClaimsProvider-1.html",
    "title": "Interface IClaimsProvider<TUser> | AuthEndpoints",
    "keywords": "Interface IClaimsProvider<TUser> Implements IClaimsProvider<TUser> to define your claims provider Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public interface IClaimsProvider<TUser> where TUser : class Type Parameters Name Description TUser Methods | Improve this Doc View Source provideClaims(TUser) Use this method to get a list of claims for the given user Declaration IList<Claim> provideClaims(TUser user) Parameters Type Name Description TUser user Returns Type Description IList < System.Security.Claims.Claim >"
  },
  "api/AuthEndpoints.Services.IJwtFactory.html": {
    "href": "api/AuthEndpoints.Services.IJwtFactory.html",
    "title": "Interface IJwtFactory | AuthEndpoints",
    "keywords": "Interface IJwtFactory Implements IJwtFactory to define your jwt generator Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public interface IJwtFactory Methods | Improve this Doc View Source Create(String, JwtPayload) Declaration string Create(string secret, JwtPayload payload) Parameters Type Name Description System.String secret System.IdentityModel.Tokens.Jwt.JwtPayload payload Returns Type Description System.String | Improve this Doc View Source Create(String, String, String, IList<Claim>, Int32) Implements this methtod to create a jwt Declaration string Create(string secret, string issuer, string audience, IList<Claim> claims, int expirationMinutes) Parameters Type Name Description System.String secret System.String issuer System.String audience IList < System.Security.Claims.Claim > claims System.Int32 expirationMinutes Returns Type Description System.String a jwt in string"
  },
  "api/AuthEndpoints.Services.IJwtValidator.html": {
    "href": "api/AuthEndpoints.Services.IJwtValidator.html",
    "title": "Interface IJwtValidator | AuthEndpoints",
    "keywords": "Interface IJwtValidator Implements IJwtValidator to define your jwt validator Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public interface IJwtValidator Methods | Improve this Doc View Source ReadJwtToken(String) Declaration JwtSecurityToken ReadJwtToken(string token) Parameters Type Name Description System.String token Returns Type Description System.IdentityModel.Tokens.Jwt.JwtSecurityToken | Improve this Doc View Source Validate(String, TokenValidationParameters) Declaration bool Validate(string token, TokenValidationParameters validationParameters) Parameters Type Name Description System.String token Microsoft.IdentityModel.Tokens.TokenValidationParameters validationParameters Returns Type Description System.Boolean | Improve this Doc View Source ValidateAsync(String, TokenValidationParameters) Declaration Task<bool> ValidateAsync(string token, TokenValidationParameters validationParameters) Parameters Type Name Description System.String token Microsoft.IdentityModel.Tokens.TokenValidationParameters validationParameters Returns Type Description Task < System.Boolean >"
  },
  "api/AuthEndpoints.Services.IRefreshClaimsProvider-1.html": {
    "href": "api/AuthEndpoints.Services.IRefreshClaimsProvider-1.html",
    "title": "Interface IRefreshClaimsProvider<TUser> | AuthEndpoints",
    "keywords": "Interface IRefreshClaimsProvider<TUser> Implements IRefreshClaimsProvider<TUser> to define your refresh token claims provider Inherited Members IClaimsProvider<TUser>.provideClaims(TUser) Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public interface IRefreshClaimsProvider<TUser> : IClaimsProvider<TUser> where TUser : class Type Parameters Name Description TUser"
  },
  "api/AuthEndpoints.Services.RefreshClaimsProvider-2.html": {
    "href": "api/AuthEndpoints.Services.RefreshClaimsProvider-2.html",
    "title": "Class RefreshClaimsProvider<TUserKey, TUser> | AuthEndpoints",
    "keywords": "Class RefreshClaimsProvider<TUserKey, TUser> A default service that provides claims for Refresh Token Inheritance System.Object RefreshClaimsProvider<TUserKey, TUser> Implements IRefreshClaimsProvider <TUser> IClaimsProvider <TUser> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public class RefreshClaimsProvider<TUserKey, TUser> : IRefreshClaimsProvider<TUser>, IClaimsProvider<TUser> where TUserKey : IEquatable<TUserKey> where TUser : IdentityUser<TUserKey> Type Parameters Name Description TUserKey TUser Methods | Improve this Doc View Source provideClaims(TUser) Use this method to get a list of claims for a refresh token Declaration public IList<Claim> provideClaims(TUser user) Parameters Type Name Description TUser user Returns Type Description IList < System.Security.Claims.Claim > A list of Claims Implements IRefreshClaimsProvider<TUser> IClaimsProvider<TUser>"
  },
  "api/AuthEndpoints.Services.RsaSignedJwtFactory.html": {
    "href": "api/AuthEndpoints.Services.RsaSignedJwtFactory.html",
    "title": "Class RsaSignedJwtFactory | AuthEndpoints",
    "keywords": "Class RsaSignedJwtFactory Use RsaSignedJwtFactory to create a jwt with RS256 signature. Inheritance System.Object RsaSignedJwtFactory Implements IJwtFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : AuthEndpoints.Services Assembly : AuthEndpoints.dll Syntax public class RsaSignedJwtFactory : IJwtFactory Constructors | Improve this Doc View Source RsaSignedJwtFactory(JwtSecurityTokenHandler) Declaration public RsaSignedJwtFactory(JwtSecurityTokenHandler tokenHandler) Parameters Type Name Description System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler tokenHandler Methods | Improve this Doc View Source Create(String, JwtPayload) Use this method to create a RS256-based jwt Declaration public string Create(string secret, JwtPayload payload) Parameters Type Name Description System.String secret System.IdentityModel.Tokens.Jwt.JwtPayload payload Returns Type Description System.String | Improve this Doc View Source Create(String, String, String, IList<Claim>, Int32) Use this method to create a RS256-based jwt Declaration public string Create(string secret, string issuer, string audience, IList<Claim> claims, int expirationMinutes) Parameters Type Name Description System.String secret System.String issuer System.String audience IList < System.Security.Claims.Claim > claims System.Int32 expirationMinutes Returns Type Description System.String a jwt in string Implements IJwtFactory"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | AuthEndpoints",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "index.html": {
    "href": "index.html",
    "title": "Installation | AuthEndpoints",
    "keywords": "A simple jwt authentication library for ASP.Net 6. AuthEndpoints library provides a set of API controllers to handle basic web & JWT authentication actions such as registration, login, reset password, etc. It works with custom identity user model . AuthEndpoints is built with the aim of increasing developer productivity. Installation NuGet AuthEndpoints Available Endpoints /users /users/me /users/set_password /jwt/create /jwt/refresh /jwt/verify Contributing Your contributions are always welcome! simply send a pull request! The up-for-grabs label is a great place to start. The documentation is far from perfect so every bit of help is more than welcome."
  },
  "wiki/asym-jwt.html": {
    "href": "wiki/asym-jwt.html",
    "title": "JWT with Asymmetric Key Signatures | AuthEndpoints",
    "keywords": "JWT with Asymmetric Key Signatures AuthEndpoints default implementation for signing and validating a jwt uses a single security key, this is being called a symmetric encryption. Distributing the key in a secure way is one of the primary challenges of this encryption type, this also known as key distribution problem. Symmetric enryption allows anyone that has access to the key that the token was encrypted with, can also decrypt it. On the other hand, Asymmetric Encryption is based on two keys, a public key, and a private key. The public key is used to validate jwt. And the private key is used to sign the jwt. To achive this, you need to add your private key and public key to the AuthEndpointsOptions : services.AddAuthEndpoints<string, IdentityUser>(options => { // These secrets will be used for signing jwts options.AccessSecret = \"<your_private_key>\"; options.RefreshSecret = \"<your_private_key>\"; ... // Use public key for validation parameters. // These validation parameters will be used for verifying/validating jwts. options.AccessValidationParameters = new TokenValidationParameters() { ... } options.RefreshValidationParameters = new TokenValidationParameters() { ... } }); For AuthEndpoints to create a jwt with Asymmetric algorithm based signatures, you can use the RsaSignedJwtFactory class. This class use HS256 algorithm for signing a jwt. Register it with AuthEndpointsBuilder.AddJwtFactory<>() : builder.AddJwtFactory<RsaSignedJwtFactory>(); Or you can also define your own jwt factory: public class MyJwtFactory : IJwtFactory {} builder.AddJwtFactory<MyJwtFactory>();"
  },
  "wiki/authorization.html": {
    "href": "wiki/authorization.html",
    "title": "Simple Authorization | AuthEndpoints",
    "keywords": "Simple Authorization The following code limits access to the MyController to jwt authenticated users: using Microsoft.AspNetCore.Authorization; [Authorize(\"jwt\")] public class MyController : ControllerBase {} If you want to apply authorization to an action rather than the controller, apply the AuthorizeAttribute attribute to the action itself: using Microsoft.AspNetCore.Authorization; public class MyController : ControllerBase { public ActionResult Get() {} [Authorize(\"jwt\")] public ActionResult Post() {} } Read more at the documentation"
  },
  "wiki/base-endpoints.html": {
    "href": "wiki/base-endpoints.html",
    "title": "Base Endpoints | AuthEndpoints",
    "keywords": "Base Endpoints BaseEndpointsController<TUserKey, TUser> User Create Use this endpoint to register new user. Default URL : /users Authorizations : (Jwt or None) Method Request Response POST email username password confirmPassword HTTP_200_OK HTTP_400_BAD_REQUEST User Retrieve Use this endpoints to retrieve the authenticated user data. Default URL : /users/me Authorizations : (Jwt) Method Request Response GET - HTTP_200_OK User data Set Password Use this endpoints to change user password. Default URL : /users/set_password Authorizations : (Jwt) Method Request Response POST currentPassword newPassword confirmNewPassword HTTP_204_NO_CONTENT HTTP_400_BAD_REQUEST"
  },
  "wiki/custom-authenticator.html": {
    "href": "wiki/custom-authenticator.html",
    "title": "Writing an Authenticator | AuthEndpoints",
    "keywords": "Writing an Authenticator By default, AuthEndpoints authenticate users via username. If you want to change this behavior, for example, you want to authenticate a user via email, then you need to write a custom authenticator. Something like this will work: public class MyAuthenticator : IAuthenticator<IdentityUser> { public async Task<IdentityUser?> Authenticate(string email, string password) { var user = await userManager.FindByEmailAsync(email); if (user == null) { return null; } bool correctPassword = await userManager.CheckPasswordAsync(user, password); if (!correctPassword) { return null; } return user; } public Task<AuthenticatedUserResponse> Login(IdentityUser user) { ... } } finally, register it via AuthEndpointsBuilder.AddAuthenticator<>() : var builder = services.AddAuthEndpoints<string, IdentityUser>(); builder.AddAuthenticator<MyAuthenticator>();"
  },
  "wiki/custom-claims.html": {
    "href": "wiki/custom-claims.html",
    "title": "Token Claims | AuthEndpoints",
    "keywords": "Token Claims JSON web tokens (JWTs) claims are pieces of information asserted about a subject. In a JWT, a claim appears as a name/value pair where the name is always a string and the value can be any JSON value. Generally, when we talk about a claim in the context of a JWT, we are referring to the name (or key). By default AuthEndpoints add 2 custom claims to an access token, user id and username. And add 1 custom claim to a refresh token, user id. To change this, you can write a custom claims provider. Something like this will work: public class MyAccessClaimsProvider : IAccessTokenClaimsProvider<MyApplicationUser> { public IList<Claim> provideClaims(TUser user) { return new List<Claim>() { new Claim(\"id\", user.Id.ToString()!), new Claim(ClaimTypes.Email, user.Email), new Claim(ClaimTypes.Name, user.UserName), new Claim(ClaimTypes.MobilePhone, user.PhoneNumber), } } } public class MyRefreshClaimsProvider : IRefreshTokenClaimsProvider<MyApplicationUser> { public IList<Claim> provideClaims(TUser user) { return new List<Claim>() { new Claim(\"id\", user.Id.ToString()!), } } } Then, register them: builder.AddAccessClaimsProvider<MyAccessClaimsProvider>(); builder.AddRefreshClaimsProvider<MyRefreshClaimsProvider>();"
  },
  "wiki/custom-identity-user.html": {
    "href": "wiki/custom-identity-user.html",
    "title": "Working with Custom Identity User | AuthEndpoints",
    "keywords": "Working with Custom Identity User For AuthEndpoints to work with custom identity user, you need to specify the key type for TUserKey and the custom user class for TUser on AddAuthEndpoints<TUserKey, TUser>() . For example, my custom identity user: public class MyApplicationUser : IdentityUser<Guid> { public string Nickname { get; set; } } Then, you can simply specify the key type for TUserKey and the custom class for TUser : services.AddAuthEndpoints<Guid, MyApplicationUser>();"
  },
  "wiki/get-started.html": {
    "href": "wiki/get-started.html",
    "title": "Getting started | AuthEndpoints",
    "keywords": "Getting started Follow steps below to install and use AuthEndpoints. Create a project Create an empty ASP.NET Core project dotnet new web -n MyNewWebApp Install nuget package Install the library using the following .net cli command: dotnet add package AuthEndpoints or with nuget package manager: Install-Package AuthEndpoints Quick Start Edit Program.cs , then add auth endpoints services and jwt bearer authentication scheme: services.AddAuthEndpoints<string, IdentityUser>(options => { // These secrets will be used for signing jwts options.AccessSecret = \"...\", options.RefreshSecret = \"...\", options.Issuer = \"...\", options.Audience = \"...\", options.AccessExpirationMinutes = 120; // Access token expires in 2 hours options.AccessExpirationMinutes = 2880; // Refresh token expires in 2 days // These validation parameters will be used for verifying/validating jwts options.AccessValidationParameters = new TokenValidationParameters() { ... } options.RefreshValidationParameters = new TokenValidationParameters() { ... } }).AddJwtBearerAuthScheme(AccessValidationParameters); Add Base Authentication Endpoints Create a new directory called Controllers then create a new controller called MyBaseAuthController.cs then add the following: public class MyBaseAuthController: BaseEndpointsController<string, IdentityUser> {} See what endpoints included in BaseEndpointsController Add Jwt Endpoints Create a new controller called MyJwtController.cs then add the following: public class MyJwtController : JwtController<string, IdentityUser> {} See what endpoints included in JwtController"
  },
  "wiki/jwt-endpoints.html": {
    "href": "wiki/jwt-endpoints.html",
    "title": "JWT Endpoints | AuthEndpoints",
    "keywords": "JWT Endpoints JwtController<TUserKey, TUser> JWT Create Use this endpoint to obtain jwt. Default URL : /jwt/create Authorizations : (Jwt or None) Method Request Response POST username password HTTP_200_OK accessToken refreshToken HTTP_401_UNAUTHORIZED JWT Refresh Use this endpoint to refresh jwt. Default URL : /jwt/refresh Authorizations : (Jwt) Method Request Response GET refreshToken HTTP_200_OK User data JWT Verify Use this endpoints to verify jwt. Default URL : /users/set_password Authorizations : (Jwt) Method Request Response POST token HTTP_200_OK HTTP_401_UNAUTHORIZED"
  },
  "wiki/override-controller.html": {
    "href": "wiki/override-controller.html",
    "title": "| AuthEndpoints",
    "keywords": ""
  },
  "wiki/swagger.html": {
    "href": "wiki/swagger.html",
    "title": "| AuthEndpoints",
    "keywords": ""
  },
  "wiki/tutorial.html": {
    "href": "wiki/tutorial.html",
    "title": "| AuthEndpoints",
    "keywords": ""
  }
}